volumes:
  mls_mysql_db:
  msl_mongodb_data:

networks:
  mls_network:

services:
  # DATABASE : MYSQL
  mls_mysql_db:
    container_name: mls_mysql_db
    image: mysql:latest
    restart: always
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - mls_mysql_db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootroot
      MYSQL_DATABASE: mls_patient

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 3
    networks:
      - mls_network
    ports:
      - "3307:3306"

  # MongoDB
  mongodb:
    container_name: msl_mongodb
    image: mongo:latest
    restart: always
    volumes:
      - msl_mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: mls_note
    networks:
      - mls_network
    ports:
      - "27017:27017"

  # Edge Service : DISCOVERY
  service-discovery:
    container_name: msl_discovery_service
    build:
      context: service-discovery/.
      dockerfile: Dockerfile
    environment:
      eureka.instance.hostname: host.docker.internal
      eureka.client.serviceUrl.defaultZone: http://service-discovery:9090/eureka
    networks:
      - mls_network
    ports:
      - "9090:9090"


  patient:
    container_name: msl_patient_service
    depends_on:
      mls_mysql_db:
        condition: service_healthy
      service-discovery:
        condition: service_started

    build:
      context: patient/.
      dockerfile: Dockerfile
    environment:
      eureka.instance.hostname: host.docker.internal
      eureka.client.serviceUrl.defaultZone: http://service-discovery:9090/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/mls_patient
    networks:
      - mls_network
    ports:
      - "8082:8082"

  note:
    container_name: msl_notes_service
    depends_on:
      mongodb:
        condition: service_started
      service-discovery:
        condition: service_started

    build:
      context: note/.
      dockerfile: Dockerfile
    environment:
      eureka.instance.hostname: host.docker.internal
      eureka.client.serviceUrl.defaultZone: http://service-discovery:9090/eureka
      SPRING_DATA_MONGODB_URI: mongodb+srv://alicepogam59:87mJZW5blQb8YzUm@medilabonote.you6h.mongodb.net/mls_note?retryWrites=true&w=majority
    networks:
      - mls_network
    ports:
      - "8083:8083"

  diabete:
    container_name: msl_diabetes_service
    depends_on:
      service-discovery:
        condition: service_started
    build:
      context: diabete/.
      dockerfile: Dockerfile
    environment:
      eureka.instance.hostname: host.docker.internal
      eureka.client.serviceUrl.defaultZone: http://service-discovery:9090/eureka
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/mls_diabetes
    networks:
      - mls_network
    ports:
      - "8084:8084"

  # Gateway
  gateway:
    container_name: msl_gateway
    depends_on:
      service-discovery:
        condition: service_started
      patient:
        condition: service_started
      note:
        condition: service_started
      diabete:
        condition: service_started

    build:
      context: gateway/.
      dockerfile: Dockerfile
    environment:
      eureka.instance.hostname: host.docker.internal
      eureka.client.serviceUrl.defaultZone: http://service-discovery:9090/eureka
    networks:
      - mls_network
    ports:
      - "9091:9091"

  # Frontend React
  frontend:
    container_name: msl_frontend
    depends_on:
      gateway:
        condition: service_started
    build:
      context: frontend/.
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
